Eval4 <- table(S$afterExp3RatingEvaluation_4)
Eval5 <- table(S$afterExp3RatingEvaluation_5)
Eval6 <- table(S$afterExp3RatingEvaluation_6)
Eval7 <- table(S$afterExp3RatingEvaluation_7)
Eval8 <- table(S$afterExp3RatingEvaluation_8)
label <- c("Im Alltag achte ich stets auf den Klang der Stimme einer Person.",
"Es fiel mir ?u?erst schwer, die Stimmen zu bewerten.",
"Bei den meisten Stimmen hatte ich gar keine Ahnung, was ich dr?cken sollte.",
"Ich habe die ganze Zeit aufmerksam zugeh?rt.",
"Oft habe ich einfach irgendetwas geklickt.",
"Ich fand dieses H?rexperiment ?u?erst interessant.",
"Ich habe in jedem Durchgang versucht, die Bewertung so gut wie m?glich zu machen.",
"Ich achte normalerweise gar nicht auf die Stimmen von Personen.")
capture.output(label[1], Eval1, label[2],Eval2, label[3],Eval3,label[4], Eval4, label[5],Eval5, label[6], Eval6,label[7], Eval7, label[8], Eval8,file="output/sample_description/after_experiment_evaluation.txt")
capture.output(label[1], Eval1, label[2],Eval2, label[3],Eval3,label[4], Eval4, label[5],Eval5, label[6], Eval6,label[7], Eval7, label[8], Eval8,file="output/Exp1_after_experiment_evaluation.txt")
rm(label, Eval1, Eval2, Eval3, Eval4, Eval5, Eval6, Eval7, Eval8)
# after Exp-Evaluation
Eval1 <- table(S$afterExp3RatingEvaluation_1)
Eval2 <- table(S$afterExp3RatingEvaluation_2)
Eval3 <- table(S$afterExp3RatingEvaluation_3)
Eval4 <- table(S$afterExp3RatingEvaluation_4)
Eval5 <- table(S$afterExp3RatingEvaluation_5)
Eval6 <- table(S$afterExp3RatingEvaluation_6)
Eval7 <- table(S$afterExp3RatingEvaluation_7)
Eval8 <- table(S$afterExp3RatingEvaluation_8)
label <- c("Im Alltag achte ich stets auf den Klang der Stimme einer Person.",
"Es fiel mir äußerst schwer, die Stimmen zu bewerten.",
"Bei den meisten Stimmen hatte ich gar keine Ahnung, was ich dr?cken sollte.",
"Ich habe die ganze Zeit aufmerksam zugehört.",
"Oft habe ich einfach irgendetwas geklickt.",
"Ich fand dieses Hörexperiment äußerst interessant.",
"Ich habe in jedem Durchgang versucht, die Bewertung so gut wie möglich zu machen.",
"Ich achte normalerweise gar nicht auf die Stimmen von Personen.")
capture.output(label[1], Eval1, label[2],Eval2, label[3],Eval3,label[4], Eval4, label[5],Eval5, label[6], Eval6,label[7], Eval7, label[8], Eval8,file="output/Exp1_after_experiment_evaluation.txt")
rm(label, Eval1, Eval2, Eval3, Eval4, Eval5, Eval6, Eval7, Eval8)
##########################################################################
## File: 00_Exp1_data_preparation.R
## Data Preparatation for Exp 1: Adaptation of Emotion - male/female voices
# author: Christine Nussbaum/Dorothea Berges
# date 05/2024
# clear directory
rm(list=ls())
#set working directory to current file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library("tidyverse")
# load relevant functions
source("functions/loadPTKExperimentData.R")
source("functions/mySummary.R")
#---------------------------------------------------------------------------------
#get the raw data:
D <- loadPTKExperimentData(relDirPath = "input/raw/")
#number of participants
print(paste("There are currently", length(unique(D$Subject)), "participants loaded."))
#reorder columns - Subject Variablen zuerst
D <- D[,c(18,17,16, 1:15)]
#---------------------------------------------------------------------------------
#Data preparation
#[1] Split the data in the Baseline and the Adaptation-Block
E1_Bline <- D[,-c(12:18)] %>% filter(V1 == "Baseline")
E1_Adapt <- D %>% filter(V1 == "Antwort")
#[2] Rename Variables
names(E1_Bline) <- c("Participant", "Date", "Experiment","Block", "Duration", "SpID", "Word", "tML", "SpSex", "Resp","RT" )
names(E1_Adapt) <- c("Participant", "Date", "Experiment", "Block", "Duration", "SpID", "Word", "tML", "SpSex","TopUp", "y", "z", "TopupM", "TopupF", "Resp", "RT", "AdaptType", "Blockorder" )
#[3] Adjust some settings of variables
E1_Bline$Resp <- as.numeric(E1_Bline$Resp)
E1_Adapt$Resp <- as.numeric(E1_Adapt$Resp)
#sort out all the counting variables responsible for the top-up E1_Adaptation:
E1_Adapt$y <- ifelse(E1_Adapt$TopUp != 0, NA, E1_Adapt$y)
E1_Adapt$z <- ifelse(E1_Adapt$TopUp != 0, NA, E1_Adapt$z)
E1_Adapt$TopupM <- ifelse(E1_Adapt$TopUp != 0, NA, E1_Adapt$TopupM)
E1_Adapt$TopupF <- ifelse(E1_Adapt$TopUp != 0, NA, E1_Adapt$TopupF)
E1_Adapt$TopUp <- ifelse(E1_Adapt$TopUp == 0, "Yes", NA) #Code if this was a TopUp Trial
#recode the Response for both datasets
E1_Bline$Resp <- E1_Bline$Resp -1 # umkodieren
E1_Adapt$Resp <- E1_Adapt$Resp -1 # umkodieren
#---------------------------------------------------------------------------------
#Check if everything is loaded correctly
#[1] N different stimuli per participant
table(E1_Bline$Participant) #should be 112 per participant
table(E1_Adapt$Subject) #should be 224 per participant
#[2]Is every stimulus picked exactly once? - Baseline
#code a stimulus variable
E1_Bline$Stimulus <- str_c(E1_Bline$SpID, E1_Bline$Word, E1_Bline$tML, sep = "_")
table(table(E1_Bline$Stimulus, E1_Bline$Participant)) #should give out only "1"s
#[3]Is every stimulus picked exactly twice? - Adaptation
E1_Adapt$Stimulus <- str_c(E1_Adapt$SpID, E1_Adapt$Word, E1_Adapt$tML, sep = "_")
table(table(E1_Adapt$Stimulus, E1_Adapt$Participant)) #should give out only "2"s
#---------------------------------------------------------------------------------
#Check if some participants only pressed one key during a whole block
# if so -> remove
Check_Bline <- E1_Bline %>% group_by(Participant) %>% summarise(var = var(Resp)) # no one
Check_Adapt <- E1_Adapt %>% group_by(Participant) %>% summarise(var = var(Resp)) # no one
# no one has to be removed here
rm(Check_Bline, Check_Adapt)
#---------------------------------------------------------------------------------
#Save datasets
save(E1_Bline, E1_Adapt, file ="input/Exp1_raw_data.RData")
#CG_input <- mySummary(Adapt, Resp, Subject, AdaptType, SpSex, tML) # Input f?r jeden Probanden einzeln
#CG_agg_input <- mySummary(CG_input, Resp, AdaptType, SpSex, tML) # input ?ber alle Probanden gemittelt
#save(CG_input, CG_agg_input, CG_input_E1_Bline, file ="input/CG_input_data.RData")
#CG_input_E1_Bline <- mySummary(E1_Bline, Resp, Subject, SpSex, tML)
rm()
##################################################################################
##################################################################################
##################################################################################
#---------------------------------------------------------------------------------
# survey data preparation
#load raw survey data
S <- read.csv(file ="input/data_Exp1.csv")
#rename participant
S$participant <- substr(S$participant, 31,38)
#keep only the ones with an experimental file
S <- S %>% filter(participant %in% unique(E1_Adapt$Participant)) # check: N = 40
#rename a few variables
S <- S %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5)) %>%
rename(LAge = LAge_1,
LSex = LSex_1,
LMotherLanguage = LMotherLanguage_1,
LStudyWork = LStudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
Strategy = afterExp4Strategy_1)
#save survey
save(S, file="input/Exp1_survey.RData")
##End of Script
View(S)
names(S)
#load raw survey data
S <- read.csv(file ="input/data_Exp1.csv")
#rename participant
S$participant <- substr(S$participant, 31,38)
#keep only the ones with an experimental file
S <- S %>% filter(participant %in% unique(E1_Adapt$Participant)) # check: N = 40
View(S)
#load raw survey data
S1 <- read.csv(file ="input/data_Exp1.csv")
#rename participant
S1$participant <- substr(S1$participant, 31,38)
#keep only the ones with an experimental file
S1 <- S1 %>% filter(participant %in% unique(E1_Adapt$Participant)) # check: N = 40
S1$VPN_Code <- paste0(S1$LPartCode_1, LPartCode_2, LPartCode_3, LPartCode_4, LPartCode_5, LPartCode_6)
#load raw survey data
S1 <- read.csv(file ="input/data_Exp1.csv")
#rename participant
S1$participant <- substr(S1$participant, 31,38)
#keep only the ones with an experimental file
S1 <- S1 %>% filter(participant %in% unique(E1_Adapt$Participant)) # check: N = 40
S1$VPN_Code <- paste0(S1$LPartCode_1, S1$LPartCode_2, S1$LPartCode_3, S1$LPartCode_4, S1$LPartCode_5, S1$LPartCode_6)
#rename a few variables
S1 <- S1 %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5,
S1tartRatingExperiment_1)) %>%
rename(LAge = LAge_1,
LS1ex = LS1ex_1,
LMotherLanguage = LMotherLanguage_1,
LS1tudyWork = LS1tudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
S1trategy = afterExp4S1trategy_1)
names(S)
#rename a few variables
S1 <- S1 %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5,
LPartCode_6,
StartRatingExperiment_1)) %>%
rename(LAge = LAge_1,
LS1ex = LS1ex_1,
LMotherLanguage = LMotherLanguage_1,
LS1tudyWork = LS1tudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
S1trategy = afterExp4S1trategy_1)
#load raw survey data
S1 <- read.csv(file ="input/data_Exp1.csv")
#rename participant
S1$participant <- substr(S1$participant, 31,38)
#keep only the ones with an experimental file
S1 <- S1 %>% filter(participant %in% unique(E1_Adapt$Participant)) # check: N = 40
S1$VPN_Code <- paste0(S1$LPartCode_1, S1$LPartCode_2, S1$LPartCode_3, S1$LPartCode_4, S1$LPartCode_5, S1$LPartCode_6)
#rename a few variables
S1 <- S1 %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5,
LPartCode_6,
StartRatingExperiment_1)) %>%
rename(LAge = LAge_1,
LS1ex = LS1ex_1,
LMotherLanguage = LMotherLanguage_1,
LS1tudyWork = LS1tudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
S1trategy = afterExp4S1trategy_1)
#rename a few variables
S1 <- S1 %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5,
LPartCode_6,
StartRatingExperiment_1)) %>%
rename(LAge = LAge_1,
LS1ex = LSex_1,
LMotherLanguage = LMotherLanguage_1,
LS1tudyWork = LS1tudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
S1trategy = afterExp4S1trategy_1)
#rename a few variables
S1 <- S1 %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5,
LPartCode_6,
StartRatingExperiment_1)) %>%
rename(LAge = LAge_1,
LS1ex = LSex_1,
LMotherLanguage = LMotherLanguage_1,
LS1tudyWork = LStudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
S1trategy = afterExp4S1trategy_1)
#rename a few variables
S1 <- S1 %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5,
LPartCode_6,
StartRatingExperiment_1)) %>%
rename(LAge = LAge_1,
LSex = LSex_1,
LMotherLanguage = LMotherLanguage_1,
LStudyWork = LStudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
Strategy = afterExp4Strategy_1)
View(S1)
#load raw survey data
S1 <- read.csv(file ="input/data_Exp1.csv")
#rename participant
S1$participant <- substr(S1$participant, 31,38)
#keep only the ones with an experimental file
S1 <- S1 %>% filter(participant %in% unique(E1_Adapt$Participant)) # check: N = 40
S1$VPN_Code <- paste0(S1$LPartCode_1, S1$LPartCode_2, S1$LPartCode_3, S1$LPartCode_4, S1$LPartCode_5, S1$LPartCode_6)
#rename a few variables
S1 <- S1 %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5,
LPartCode_6,
StartRatingExperiment_1,
country)) %>%
rename(LAge = LAge_1,
LSex = LSex_1,
LMotherLanguage = LMotherLanguage_1,
LStudyWork = LStudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
Strategy = afterExp4Strategy_1)
#save survey
save(S1, file="input/Exp1_survey.RData")
names(S)
##########################################################################
## File: 00_Exp1_data_preparation.R
## Data Preparatation for Exp 1: Adaptation of Emotion - male/female voices
# author: Christine Nussbaum/Dorothea Berges
# date 05/2024
# clear directory
rm(list=ls())
#set working directory to current file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library("tidyverse")
# load relevant functions
source("functions/loadPTKExperimentData.R")
source("functions/mySummary.R")
#---------------------------------------------------------------------------------
#get the raw data:
D <- loadPTKExperimentData(relDirPath = "input/raw/")
#number of participants
print(paste("There are currently", length(unique(D$Subject)), "participants loaded."))
#reorder columns - Subject Variablen zuerst
D <- D[,c(18,17,16, 1:15)]
#---------------------------------------------------------------------------------
#Data preparation
#[1] Split the data in the Baseline and the Adaptation-Block
E1_Bline <- D[,-c(12:18)] %>% filter(V1 == "Baseline")
E1_Adapt <- D %>% filter(V1 == "Antwort")
#[2] Rename Variables
names(E1_Bline) <- c("Participant", "Date", "Experiment","Block", "Duration", "SpID", "Word", "tML", "SpSex", "Resp","RT" )
names(E1_Adapt) <- c("Participant", "Date", "Experiment", "Block", "Duration", "SpID", "Word", "tML", "SpSex","TopUp", "y", "z", "TopupM", "TopupF", "Resp", "RT", "AdaptType", "Blockorder" )
#[3] Adjust some settings of variables
E1_Bline$Resp <- as.numeric(E1_Bline$Resp)
E1_Adapt$Resp <- as.numeric(E1_Adapt$Resp)
#sort out all the counting variables responsible for the top-up E1_Adaptation:
E1_Adapt$y <- ifelse(E1_Adapt$TopUp != 0, NA, E1_Adapt$y)
E1_Adapt$z <- ifelse(E1_Adapt$TopUp != 0, NA, E1_Adapt$z)
E1_Adapt$TopupM <- ifelse(E1_Adapt$TopUp != 0, NA, E1_Adapt$TopupM)
E1_Adapt$TopupF <- ifelse(E1_Adapt$TopUp != 0, NA, E1_Adapt$TopupF)
E1_Adapt$TopUp <- ifelse(E1_Adapt$TopUp == 0, "Yes", NA) #Code if this was a TopUp Trial
#recode the Response for both datasets
E1_Bline$Resp <- E1_Bline$Resp -1 # umkodieren
E1_Adapt$Resp <- E1_Adapt$Resp -1 # umkodieren
#---------------------------------------------------------------------------------
#Check if everything is loaded correctly
#[1] N different stimuli per participant
table(E1_Bline$Participant) #should be 112 per participant
table(E1_Adapt$Subject) #should be 224 per participant
#[2]Is every stimulus picked exactly once? - Baseline
#code a stimulus variable
E1_Bline$Stimulus <- str_c(E1_Bline$SpID, E1_Bline$Word, E1_Bline$tML, sep = "_")
table(table(E1_Bline$Stimulus, E1_Bline$Participant)) #should give out only "1"s
#[3]Is every stimulus picked exactly twice? - Adaptation
E1_Adapt$Stimulus <- str_c(E1_Adapt$SpID, E1_Adapt$Word, E1_Adapt$tML, sep = "_")
table(table(E1_Adapt$Stimulus, E1_Adapt$Participant)) #should give out only "2"s
#---------------------------------------------------------------------------------
#Check if some participants only pressed one key during a whole block
# if so -> remove
Check_Bline <- E1_Bline %>% group_by(Participant) %>% summarise(var = var(Resp)) # no one
Check_Adapt <- E1_Adapt %>% group_by(Participant) %>% summarise(var = var(Resp)) # no one
# no one has to be removed here
rm(Check_Bline, Check_Adapt)
#---------------------------------------------------------------------------------
#Save datasets
save(E1_Bline, E1_Adapt, file ="input/Exp1_raw_data.RData")
#CG_input <- mySummary(Adapt, Resp, Subject, AdaptType, SpSex, tML) # Input f?r jeden Probanden einzeln
#CG_agg_input <- mySummary(CG_input, Resp, AdaptType, SpSex, tML) # input ?ber alle Probanden gemittelt
#save(CG_input, CG_agg_input, CG_input_E1_Bline, file ="input/CG_input_data.RData")
#CG_input_E1_Bline <- mySummary(E1_Bline, Resp, Subject, SpSex, tML)
rm()
##################################################################################
##################################################################################
##################################################################################
#---------------------------------------------------------------------------------
# survey data preparation
#load raw survey data
S1 <- read.csv(file ="input/data_Exp1.csv")
#rename participant
S1$participant <- substr(S1$participant, 31,38)
#keep only the ones with an experimental file
S1 <- S1 %>% filter(participant %in% unique(E1_Adapt$Participant)) # check: N = 40
S1$VPN_Code <- paste0(S1$LPartCode_1, S1$LPartCode_2, S1$LPartCode_3, S1$LPartCode_4, S1$LPartCode_5, S1$LPartCode_6)
#rename a few variables
S1 <- S1 %>% select(!c(intro_question1_1,
TIME_start,
TIME_end,
CLIENT_start,
LPartCode_1,
LPartCode_2,
LPartCode_3,
LPartCode_4,
LPartCode_5,
LPartCode_6,
StartRatingExperiment_1,
country)) %>%
rename(LAge = LAge_1,
LSex = LSex_1,
LMotherLanguage = LMotherLanguage_1,
LStudyWork = LStudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
Strategy = afterExp4Strategy_1,
Eval1 = afterExp3RatingEvaluation_1,
Eval2 = afterExp3RatingEvaluation_2,
Eval3 = afterExp3RatingEvaluation_3,
Eval4 = afterExp3RatingEvaluation_4,
Eval5 = afterExp3RatingEvaluation_5,
Eval6 = afterExp3RatingEvaluation_6,
Eval7 = afterExp3RatingEvaluation_7,
Eval8 = afterExp3RatingEvaluation_8)
#save survey
save(S1, file="input/Exp1_survey.RData")
names(S)
View(S1)
# after Exp-Evaluation
Eval1 <- table(S$Eval1)
#S data
load(file="input/Exp1_Survey.RData")
##########################################################################
## File: 01_Exp1_sample_information.R
## This script gives me an overview of the sample in Exp1
# author: Christine Nussbaum
# date 03/2025
# clear directory
rm(list=ls())
#set working directory to current file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library("tidyverse")
# load relevant functions
source("functions/mySummary.R")
#---------------------------------------------------------------------------------
#get the preprocessed data:
#S data
load(file="input/Exp1_Survey.RData")
## Meaning of Variables
#ToDo
#------------------------------------------------------------------------------------------------------------------#
#                                           Sample Demographics                                                    #
#------------------------------------------------------------------------------------------------------------------#
#general demographics
Age <- mySummary(S1, LAge)
range <- S1 %>% summarise(range(LAge))
sex <- table(S1$LSex)
language <- table(S1$LMotherLanguage)
LStudyWork <- table(S1$LStudyWork)
LHearingKown <- table(S1$LHearingKown)
LHearingKind <- table(S1$LHearingKind)
LHearingImp <- table(S1$LHearingImp)
duration <- S1 %>% summarise(Tmean = mean(TIME_total),
min = min(TIME_total),
max = max(TIME_total))
capture.output(as.matrix(Age), as.matrix(range), sex, language,
LStudyWork, LHearingKown, LHearingKind, LHearingImp, as.matrix(duration),
file="output/Exp1_demographics.txt")
rm(Age, range, sex, language, LStudyWork, LHearingKown, LHearingKind, LHearingImp, duration)
## comments
capture.output(S1$Anmerkungen, S1$InstructionsClear, S1$Strategy, file="output/Exp1_comments.txt")
# after Exp-Evaluation
Eval1 <- table(S1$Eval1)
Eval2 <- table(S1$Eval2)
Eval3 <- table(S1$Eval3)
Eval4 <- table(S1$Eval4)
Eval5 <- table(S1$Eval5)
Eval6 <- table(S1$Eval6)
Eval7 <- table(S1$Eval7)
Eval8 <- table(S1$Eval8)
label <- c("Im Alltag achte ich stets auf den Klang der Stimme einer Person.",
"Es fiel mir äußerst schwer, die Stimmen zu bewerten.",
"Bei den meisten Stimmen hatte ich gar keine Ahnung, was ich dr?cken sollte.",
"Ich habe die ganze Zeit aufmerksam zugehört.",
"Oft habe ich einfach irgendetwas geklickt.",
"Ich fand dieses Hörexperiment äußerst interessant.",
"Ich habe in jedem Durchgang versucht, die Bewertung so gut wie möglich zu machen.",
"Ich achte normalerweise gar nicht auf die Stimmen von Personen.")
capture.output(label[1], Eval1, label[2],Eval2, label[3],Eval3,label[4], Eval4, label[5],Eval5, label[6], Eval6,label[7], Eval7, label[8], Eval8,file="output/Exp1_after_experiment_evaluation.txt")
rm(label, Eval1, Eval2, Eval3, Eval4, Eval5, Eval6, Eval7, Eval8)
## End of Script
