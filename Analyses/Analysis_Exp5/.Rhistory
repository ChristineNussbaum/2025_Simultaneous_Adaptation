LPartCode_6,
StartRatingExperiment_1)) %>%
rename(LAge = LAge_1,
LSex = LSex_1,
LMotherLanguage = LMotherLanguage_1,
LStudyWork = LStudyWork_1,
LHearingKown = LHearingDisabilitiesKnown_1,
LHearingKind = LHearingDisabilitiesKind_1,
LHearingImp = LHearingDisabilitiesConstraint_1,
Anmerkungen = Anmerkungen_1,
InstructionsClear = afterExp2InstructionsClear_1,
Strategy = afterExp4Strategy_1,
Eval1 = afterExp3RatingEvaluation_1,
Eval2 = afterExp3RatingEvaluation_2,
Eval3 = afterExp3RatingEvaluation_3,
Eval4 = afterExp3RatingEvaluation_4,
Eval5 = afterExp3RatingEvaluation_5,
Eval6 = afterExp3RatingEvaluation_6,
Eval7 = afterExp3RatingEvaluation_7,
Eval8 = afterExp3RatingEvaluation_8)
#save survey
save(S5, file="input/Exp5_survey.RData")
##End of Script
##########################################################################
## File: 02_Exp5_sample_information.R
## This script gives me an overview of the sample in Exp5
# author: Christine Nussbaum
# date 03/2025
# clear directory
rm(list=ls())
#set working directory to current file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library("tidyverse")
# load relevant functions
source("functions/mySummary.R")
#---------------------------------------------------------------------------------
#get the preprocessed data:
#S data
load(file="input/Exp5_Survey.RData")
## Meaning of Variables
#ToDo
#------------------------------------------------------------------------------------------------------------------#
#                                           Sample Demographics                                                    #
#------------------------------------------------------------------------------------------------------------------#
#general demographics
Age <- mySummary(S5, LAge)
range <- S5 %>% summarise(range(LAge))
sex <- table(S5$LSex)
language <- table(S5$LMotherLanguage)
LStudyWork <- table(S5$LStudyWork)
LHearingKown <- table(S5$LHearingKown)
LHearingKind <- table(S5$LHearingKind)
LHearingImp <- table(S5$LHearingImp)
duration <- S5 %>% summarise(Tmean = mean(TIME_total, na.rm= TRUE),
min = min(TIME_total, na.rm= TRUE),
max = max(TIME_total, na.rm= TRUE))
capture.output(as.matrix(Age), as.matrix(range), sex, language,
LStudyWork, LHearingKown, LHearingKind, LHearingImp, as.matrix(duration),
file="output/Exp5_demographics.txt")
rm(Age, range, sex, language, LStudyWork, LHearingKown, LHearingKind, LHearingImp, duration)
## comments
write.csv(data.frame(S5$participant, S5$VPN_Code, S5$Anmerkungen, S5$InstructionsClear, S5$Strategy), file="output/Exp5_comments.txt")
# after Exp-Evaluation
Eval1 <- table(S5$Eval1)
Eval2 <- table(S5$Eval2)
Eval3 <- table(S5$Eval3)
Eval4 <- table(S5$Eval4)
Eval5 <- table(S5$Eval5)
Eval6 <- table(S5$Eval6)
Eval7 <- table(S5$Eval7)
Eval8 <- table(S5$Eval8)
label <- c("Im Alltag achte ich stets auf den Klang der Stimme einer Person.",
"Es fiel mir äußerst schwer, die Stimmen zu bewerten.",
"Bei den meisten Stimmen hatte ich gar keine Ahnung, was ich dr?cken sollte.",
"Ich habe die ganze Zeit aufmerksam zugehört.",
"Oft habe ich einfach irgendetwas geklickt.",
"Ich fand dieses Hörexperiment äußerst interessant.",
"Ich habe in jedem Durchgang versucht, die Bewertung so gut wie möglich zu machen.",
"Ich achte normalerweise gar nicht auf die Stimmen von Personen.")
capture.output(label[1], Eval1, label[2],Eval2, label[3],Eval3,label[4], Eval4, label[5],Eval5, label[6], Eval6,label[7], Eval7, label[8], Eval8,file="output/Exp5_after_experiment_evaluation.txt")
rm(label, Eval1, Eval2, Eval3, Eval4, Eval5, Eval6, Eval7, Eval8)
#------------------------------------------------------------------------------------------------------------------#
#                                        Analysis of Trials of omission                                            #
#------------------------------------------------------------------------------------------------------------------#
#load the preprocessed raw data
load(file ="input/Exp5_raw_data.RData")
#check for the number of missing (indicated by RT == 3000)
missings_Adapt <-E5_Adapt %>%  group_by(Participant) %>% filter(RT == 3000) %>% summarise(N = length(Participant),
prop = N/224)
missings_Bline <- E5_Bline %>%  group_by(Participant) %>% filter(RT == 3000) %>% summarise(N = length(Participant),
prop = N/112)
capture.output(as.matrix(missings_Adapt), as.matrix(missings_Bline), file = "output/Exp2_omissions_summary.txt")
#remove omissions from the data
E5_Adapt <- E5_Adapt %>% filter(RT != 3000) # 42 removed
E5_Bline <- E5_Bline %>% filter(RT != 3000) # 51 removed
rm(missings_Bline, missings_Adapt)
#save datasets again
save(E5_Bline, E5_Adapt, file ="input/Exp5_without_omissions.RData")
## End of Script
##########################################################################
## File: 03_Exp5_data_analysis.R
## Data Analysis for Exp 5: Adaptation of Emotion - speaker identities, JAVMEPS
# author: Christine Nussbaum
# date 03/2025
# clear directory
rm(list=ls())
#set working directory to current file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library("tidyverse")
library("ez")
library("effectsize")
library(lme4)           # version 1.1-35.1
library(ggeffects)      # version 1.6.0
library(afex)           # version 1.3-1
#library("ggplot2")
# load relevant functions
source("functions/mySummary.R")
source("functions/tracedEzOut.R")
#---------------------------------------------------------------------------------
#get the CG input data:
load(file ="input/Exp5_without_omissions.RData")
#-------------------------------------------------------------------------------#
#                Analysis 1: Via Cumulative Gaussians   - ToDo                  #
#-------------------------------------------------------------------------------#
#-------------------------------------------------------------------------------#
#   Analysis 2: Simply the amount of classifications (averaged across tML)      #
#-------------------------------------------------------------------------------#
#aggregate across pseudoword, speaker and tML for analysis
E5_Resp <- mySummary(E5_Adapt, Resp, Participant, SpID, SpSex, AdaptType) #does not contain Baseline
#create separate datasets for female and male voices
E5_Resp_f <- E5_Resp %>% filter(SpSex == "f")
E5_Resp_m <- E5_Resp %>% filter(SpSex == "m")
##########################################################################
## ANOVA IIa: 2 x 2 within subject (female voices only)
# data: E5_Resp_f
# dv: Resp
# wid: Participant
# within: AdaptType, SpID
a<-ezANOVA(data=E5_Resp_f, dv=.(Resp), wid=.(Participant), within = .(AdaptType, SpID), type=3, detailed = TRUE)
b = tracedEzOut(a, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
#N= 43 entered Analysis
##############################################################################
# Effect                                     Text
# 1    (Intercept) F(1, 42) = 605.219, p < .001, np2 = .935
# 2      AdaptType F(1, 42) =   2.256, p = .141, np2 = .051
# 3           SpID F(1, 42) =  14.579, p < .001, np2 = .258
# 4 AdaptType:SpID F(1, 42) =   1.089, p = .303, np2 = .025
##############################################################################
capture.output(b, file= "output/Exp5_Resp_ANOVAIIa_females.txt")
# visualize data (just to check)
ezPlot(data=E5_Resp_f, dv=.(Resp), wid=.(Participant), within = .(AdaptType, SpID), x=SpID, split=AdaptType)
##########################################################################
## ANOVA IIb: 2 x 2 within subject (male voices only)
# data: E5_Resp_m
# dv: Resp
# wid: Participant
# within: AdaptType, SpID
a<-ezANOVA(data=E5_Resp_m, dv=.(Resp), wid=.(Participant), within = .(AdaptType, SpID), type=3, detailed = TRUE)
b = tracedEzOut(a, print = TRUE, sph.cor = "HF", mau.p = 0.05, etasq = "partial", dfsep = ", ")
#N= 43 entered Analysis
##############################################################################
# Effect                                     Text
# 1    (Intercept) F(1, 42) = 1142.508, p < .001, np2 = .965
# 2      AdaptType F(1, 42) =   14.507, p < .001, np2 = .257
# 3           SpID F(1, 42) =  102.966, p < .001, np2 = .710
# 4 AdaptType:SpID F(1, 42) =    3.221, p = .080, np2 = .071
##############################################################################
capture.output(b, file= "output/Exp5_Resp_ANOVAIIb_males.txt")
# visualize data (just to check)
ezPlot(data=E5_Resp_m, dv=.(Resp), wid=.(Participant), within = .(AdaptType, SpID), x=SpID, split=AdaptType)
#-------------------------------------------------------------------------------#
#                        Analysis 3: logistic regression                        #
#-------------------------------------------------------------------------------#
## declare tML as numerical variable
E5_Adapt$tML <- as.numeric(as.character(E5_Adapt$tML))
#scale tML, because this is recommended for mixed-effects modelling
E5_Adapt$tML_sc <- scale(E5_Adapt$tML)
#create separate datasets for female and male voices
E5_Adapt_f <- E5_Adapt %>% filter(SpSex == "f")
E5_Adapt_m <- E5_Adapt %>% filter(SpSex == "m")
###########################
##  Female voices only
# outcome: Resp
# predictors: ML,  SpSex, AdaptType
# random: Participant
#------------------------------------------------------------------------
# Step1: estimating the model
# m: assumed fixed effects structure for Participant
m <- glmer(Resp ~ tML_sc * SpID * AdaptType   + (1 | Participant), data = E5_Adapt_f, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5))) # it was recommended to try out different optimizers to avoid converging failure and this worked
#------------------------------------------------------------------------
# Step2: calculating the p-values of the effects with afex
m_test<- mixed(m, data = E5_Adapt_f, method = "LRT", family = "binomial") # takes a few minutes
m_test
# Model: Resp ~ tML_sc * SpID * AdaptType + (1 | Participant)
# Data: E5_Adapt_f
# Df full model: 9
# Effect df      Chisq p.value
# 1                tML_sc  1 726.63 ***   <.001
# 2                  SpID  1  92.13 ***   <.001
# 3             AdaptType  1    6.66 **    .010
# 4           tML_sc:SpID  1  33.25 ***   <.001
# 5      tML_sc:AdaptType  1       0.87    .352
# 6        SpID:AdaptType  1       2.43    .119
# 7 tML_sc:SpID:AdaptType  1       0.01    .908
# save models as R objects
save(m, m_test, file= "input/E5_GLMs_female.RData")
# capture output of model "m"
capture.output(summary(m), m_test, file= "output/Exp5_GLMM_female.txt")
# extract fitted values
E5_Adapt_f$fitted <- fitted(m)
#aggregate values of fitted
GLM_fit <- mySummary(E5_Adapt_f, fitted, Participant, SpID, AdaptType)
GLM_descriptive <- mySummary(GLM_fit, fitted, SpID, AdaptType)
capture.output(GLM_descriptive, file= "output/Exp5_GLMM_female_descriptive.txt")
###########################
##  Male voices only
# outcome: Resp
# predictors: ML,  SpSex, AdaptType
# random: Participant
#------------------------------------------------------------------------
# Step1: estimating the model
# m: assumed fixed effects structure for Participant
m <- glmer(Resp ~ tML_sc * SpID * AdaptType   + (1 | Participant), data = E5_Adapt_m, family = binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5))) # it was recommended to try out different optimizers to avoid converging failure and this worked
#------------------------------------------------------------------------
# Step2: calculating the p-values of the effects with afex
m_test<- mixed(m, data = E5_Adapt_m, method = "LRT", family = "binomial") # takes a few minutes
m_test
# Model: Resp ~ tML_sc * SpID * AdaptType + (1 | Participant)
# Data: E5_Adapt_m
# Df full model: 9
# Effect df      Chisq p.value
# 1                tML_sc  1 877.48 ***   <.001
# 2                  SpID  1 642.83 ***   <.001
# 3             AdaptType  1  53.87 ***   <.001
# 4           tML_sc:SpID  1 197.35 ***   <.001
# 5      tML_sc:AdaptType  1     3.45 +    .063
# 6        SpID:AdaptType  1  11.10 ***   <.001
# 7 tML_sc:SpID:AdaptType  1    7.35 **    .007
summary(m)
###########################################################################
# Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [glmerMod]
# Family: binomial  ( logit )
# Formula: Resp ~ tML_sc * SpID * AdaptType + (1 | Participant)
# Data: E5_Adapt_m
# Control: glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e+05))
#
# AIC      BIC   logLik deviance df.resid
# 3932.7   3991.0  -1957.4   3914.7     4784
#
# Scaled residuals:
#   Min      1Q  Median      3Q     Max
# -8.6315 -0.4417 -0.1870  0.3995  8.5251
#
# Random effects:
#   Groups      Name        Variance Std.Dev.
# Participant (Intercept) 0.6218   0.7885
# Number of obs: 4793, groups:  Participant, 43
#
# Fixed effects:
#   Estimate Std. Error z value Pr(>|z|)
# (Intercept)                            -1.36532    0.15003  -9.100  < 2e-16 ***
#   tML_sc                                  1.50382    0.09574  15.707  < 2e-16 ***
#   SpIDnm04                                1.85302    0.12668  14.627  < 2e-16 ***
#   AdaptTypem3_fea/m4_ang                 -0.44887    0.13309  -3.373 0.000744 ***
#   tML_sc:SpIDnm04                         0.92990    0.15556   5.978 2.26e-09 ***
#   tML_sc:AdaptTypem3_fea/m4_ang          -0.09816    0.13822  -0.710 0.477575
# SpIDnm04:AdaptTypem3_fea/m4_ang        -0.12709    0.17916  -0.709 0.478091
# tML_sc:SpIDnm04:AdaptTypem3_fea/m4_ang -0.25745    0.21264  -1.211 0.226012
###########################################################################
# save models as R objects
save(m, m_test, file= "input/E5_GLMs_male.RData")
# capture output of model "m"
capture.output(summary(m), m_test, file= "output/Exp5_GLMM_male.txt")
# extract fitted values
E5_Adapt_m$fitted <- fitted(m)
#aggregate values of fitted
GLM_fit <- mySummary(E5_Adapt_m, fitted, Participant, SpID, AdaptType)
GLM_descriptive <- mySummary(GLM_fit, fitted, SpID, AdaptType)
capture.output(GLM_descriptive, file= "output/Exp5_GLMM_male_descriptive.txt")
##End of Script
# clear directory
rm(list=ls())
#set working directory to current file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library("tidyverse")
# load relevant functions
source("functions/mySummary.R")
load(file ="input/Exp5_without_omissions.RData")
length(unique(E5_Adapt$Participant))
#average raw data (for both Adapt and Baseline Blocks)
E5_Adapt_plot <- mySummary(E5_Adapt, Resp, Participant, tML, SpSex, SpID, AdaptType)
E5_Bline_plot <- mySummary(E5_Bline, Resp, Participant, tML, SpSex, SpID, Block)
E5_Bline_plot <- E5_Bline_plot %>% rename(AdaptType= Block)
E5_plot <- rbind(E5_Adapt_plot, E5_Bline_plot)
rm(E5_Adapt_plot, E5_Bline_plot)
E5_plot_agg<- mySummary(E5_plot, Resp, tML,  SpSex, SpID, AdaptType)
#[1a] Response per tML, SpID, SpSex and AdaptType
yTitleStr = "Proportion of angry responses"
xTitleStr = "Morphlevel"
facetStr =  "splitted per SpID and AdaptType"
title = paste0("Mean ", yTitleStr, " per ", xTitleStr, facetStr, " (N = 43)")
filename = paste0("plots/01a_Resp_Exp5.png")
#Plot
p<-(ggplot(data= E5_plot_agg, aes(x = tML, y=Resp, color = AdaptType, group=AdaptType)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = (Resp-CI), ymax = (Resp+CI)), width = 0.1 ) +
labs(x = xTitleStr , y = yTitleStr, color = "Condition", title = title) +
facet_wrap(~ SpID + SpSex, ncol = 2) +
geom_hline(yintercept = 0.5, linetype = 4) + theme_bw()+
scale_colour_manual(values=c("grey", "darkorange", "darkgreen", "darkorange", "darkgreen")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
axis.text.x = element_text(color = "black", size = 14), # angle = 45, hjust = 1.2, vjust =  1.2
axis.text.y = element_text(color = "black", size = 14),
strip.text.x = element_text(size = 14)) +
scale_y_continuous(limits=c(0,1.0), breaks = c( 0.0, 0.2, 0.4, 0.6, 0.8, 1.0)))
#abspeichern
ggsave(filename, width = 10, height = 10, dpi =300)
#keep environment tidy
remove(yTitleStr, xTitleStr, facetStr, title, filename, p)
#[1b] Response per tML, SpSex and AdaptType (plotted the other way around and without Baseline)
yTitleStr = "Proportion of angry responses"
xTitleStr = "Morphlevel"
facetStr =  "splitted per SpID and AdaptType"
title = paste0("Mean ", yTitleStr, " per ", xTitleStr, facetStr, " (N = 43)")
filename = paste0("plots/01b_Resp_Exp5.png")
#Plot
p<-(ggplot(data= E5_plot_agg[E5_plot_agg$AdaptType != "Baseline",], aes(x = tML, y=Resp, color = SpID, group=SpID)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = (Resp-CI), ymax = (Resp+CI)), width = 0.1 ) +
labs(x = xTitleStr , y = yTitleStr, color = "Speaker Sex", title = title) +
facet_wrap(~ SpSex + AdaptType, ncol = 2) +
geom_hline(yintercept = 0.5, linetype = 4) + theme_bw()+
scale_colour_manual(values=c("darkred", "darkblue", "darkred", "darkblue")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
axis.text.x = element_text(color = "black", size = 14), # angle = 45, hjust = 1.2, vjust =  1.2
axis.text.y = element_text(color = "black", size = 14),
strip.text.x = element_text(size = 14)) +
scale_y_continuous(limits=c(0,1.0), breaks = c( 0.0, 0.2, 0.4, 0.6, 0.8, 1.0)))
#abspeichern
ggsave(filename, width = 10, height = 8, dpi =300)
#keep environment tidy
remove(yTitleStr, xTitleStr, facetStr, title, filename, p)
#[1c] Plot the interaction averaged across tML
yTitleStr = "Proportion of angry responses"
xTitleStr =  "AdaptType"
title = paste0("Mean ", yTitleStr, " per ", xTitleStr, " (N = 43)")
filename = paste0("plots/01c_Resp_Exp5.png")
E5_plot_agg2<- mySummary(E5_plot, Resp,SpID, SpSex, AdaptType)
#Plot
p<-(ggplot(data= E5_plot_agg2[E5_plot_agg2$AdaptType != "Baseline",], aes(x = AdaptType, y=Resp, color = SpID, group=SpID)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = (Resp-CI), ymax = (Resp+CI)), width = 0.1 ) +
labs(x = xTitleStr , y = yTitleStr, color = "Speaker ID", title = title) +
geom_hline(yintercept = 0.5, linetype = 4) + theme_bw()+
scale_colour_manual(values=c("darkred", "darkblue", "darkred", "darkblue")) +
facet_wrap(~ SpSex, ncol = 2, drop = TRUE, scales="free") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
axis.text.x = element_text(color = "black", size = 14), # angle = 45, hjust = 1.2, vjust =  1.2
axis.text.y = element_text(color = "black", size = 14),
strip.text.x = element_text(size = 14)) +
scale_y_continuous(limits=c(0,1.0), breaks = c( 0.0, 0.2, 0.4, 0.6, 0.8, 1.0)))
#abspeichern
ggsave(filename, width = 12, height = 8, dpi =300)
#keep environment tidy
remove(yTitleStr, xTitleStr, title, filename, p)
#[1d] Plot the interaction averaged across tML, the other way around and with Baseline
yTitleStr = "Proportion of angry responses"
xTitleStr =  "SpSex"
title = paste0("Mean ", yTitleStr, " per ", xTitleStr, " (N = 43)")
filename = paste0("plots/01d_Resp_Exp5.png")
E5_plot_agg2<- mySummary(E5_plot, Resp, SpID, SpSex, AdaptType)
#Plot
p<-(ggplot(data= E5_plot_agg2, aes(x = SpID, y=Resp, color = AdaptType, group=AdaptType)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = (Resp-CI), ymax = (Resp+CI)), width = 0.1 ) +
labs(x = xTitleStr , y = yTitleStr, color = "Condition", title = title) +
geom_hline(yintercept = 0.5, linetype = 4) + theme_bw()+
scale_colour_manual(values=c("grey", "darkorange", "darkgreen", "darkorange", "darkgreen")) +
facet_grid( cols= vars(SpSex), drop = TRUE, scales="free") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
axis.text.x = element_text(color = "black", size = 14), # angle = 45, hjust = 1.2, vjust =  1.2
axis.text.y = element_text(color = "black", size = 14),
strip.text.x = element_text(size = 14)) +
scale_y_continuous(limits=c(0,1.0), breaks = c( 0.0, 0.2, 0.4, 0.6, 0.8, 1.0)))
#abspeichern
ggsave(filename, width = 12, height = 8, dpi =300)
#keep environment tidy
remove(yTitleStr, xTitleStr, title, filename, p)
#remove all files to keep environment tidy
rm(E5_Adapt, E5_Bline, E5_plot, E5_plot_agg, E5_plot_agg2)
#load the adaptation data
load(file ="input/Exp5_without_omissions.RData")
rm(E5_Bline)
#split dataset into male and femake
E5_Adapt_f <- E5_Adapt %>% filter(SpSex == "f")
E5_Adapt_m <- E5_Adapt %>% filter(SpSex == "m")
#load the model for female speakers only
load(file= "input/E5_GLMs_female.RData")
# extract fitted values
E5_Adapt_f$fitted <- fitted(m)
#remove the model data
rm(m_test, m)
#load the model for male speakers only
load(file= "input/E5_GLMs_male.RData")
# extract fitted values
E5_Adapt_m$fitted <- fitted(m)
#remove the model data
rm(m_test, m)
#glue them back together
E5_Adapt <- rbind(E5_Adapt_f, E5_Adapt_m)
rm(E5_Adapt_f, E5_Adapt_m)
#average data
E5_Adapt_plot <- mySummary(E5_Adapt, fitted, Participant, tML, SpID, SpSex, AdaptType)
E5_Adapt_plot_agg <- mySummary(E5_Adapt_plot, fitted, tML, SpID, SpSex, AdaptType)
#[3a] Response per tML, SpSex and AdaptType - without Baseline
yTitleStr = "Proportion of angry responses"
xTitleStr = "Morphlevel"
facetStr =  "splitted per SpSex and AdaptType"
title = paste0("Mean ", yTitleStr, " per ", xTitleStr, facetStr, " (N = 43)")
filename = paste0("plots/03a_Resp_Exp5.png")
#Plot
p<-(ggplot(data= E5_Adapt_plot_agg, aes(x = tML, y=fitted, color = AdaptType, group=AdaptType)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = (fitted-CI), ymax = (fitted+CI)), width = 0.1 ) +
labs(x = xTitleStr , y = yTitleStr, color = "Condition", title = title) +
facet_wrap(~ SpID + SpSex, ncol = 2) +
geom_hline(yintercept = 0.5, linetype = 4) + theme_bw()+
scale_colour_manual(values=c("darkorange", "darkgreen", "darkorange", "darkgreen")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
axis.text.x = element_text(color = "black", size = 14), # angle = 45, hjust = 1.2, vjust =  1.2
axis.text.y = element_text(color = "black", size = 14),
strip.text.x = element_text(size = 14)) +
scale_y_continuous(limits=c(0,1.0), breaks = c( 0.0, 0.2, 0.4, 0.6, 0.8, 1.0)))
#abspeichern
ggsave(filename, width = 10, height = 8, dpi =300)
#keep environment tidy
remove(yTitleStr, xTitleStr, facetStr, title, filename, p)
#[3b] Response per tML, SpSex and AdaptType (plotted the other way around)
yTitleStr = "Proportion of angry responses"
xTitleStr = "Morphlevel"
facetStr =  "splitted per SpSex and AdaptType"
title = paste0("Mean ", yTitleStr, " per ", xTitleStr, facetStr, " (N = 43)")
filename = paste0("plots/03b_Resp_Exp5.png")
#Plot
p<-(ggplot(data= E5_Adapt_plot_agg, aes(x = tML, y=fitted, color = SpID, group=SpID)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = (fitted-CI), ymax = (fitted+CI)), width = 0.1 ) +
labs(x = xTitleStr , y = yTitleStr, color = "Speaker ID", title = title) +
facet_wrap(~ SpSex + AdaptType, ncol = 2) +
geom_hline(yintercept = 0.5, linetype = 4) + theme_bw()+
scale_colour_manual(values=c("darkred", "darkblue", "darkred", "darkblue")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
axis.text.x = element_text(color = "black", size = 14), # angle = 45, hjust = 1.2, vjust =  1.2
axis.text.y = element_text(color = "black", size = 14),
strip.text.x = element_text(size = 14)) +
scale_y_continuous(limits=c(0,1.0), breaks = c( 0.0, 0.2, 0.4, 0.6, 0.8, 1.0)))
#abspeichern
ggsave(filename, width = 10, height = 8, dpi =300)
#keep environment tidy
remove(yTitleStr, xTitleStr, facetStr, title, filename, p)
#[3c] Plots for each individual participant
yTitleStr = "Proportion of angry responses"
xTitleStr = "Morphlevel"
facetStr =  "splitted per SpSex and AdaptType"
title = paste0("Mean ", yTitleStr, " per ", xTitleStr, facetStr, " (N = 43)")
filename = paste0("plots/03c_Resp_Exp5.png")
#for the original response info:
E5_Adapt_plot_resp <- mySummary(E5_Adapt, Resp, Participant, tML, SpID, SpSex, AdaptType)
#Plot
p<-(ggplot(data= E5_Adapt_plot, aes(x = tML, y=fitted, color = SpID, group=SpID)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = (fitted-CI), ymax = (fitted+CI)), width = 0.1 ) +
geom_point(data= E5_Adapt_plot_resp, aes(x = tML, y=Resp, group=SpSex), color = "grey") +
labs(x = xTitleStr , y = yTitleStr, color = "Speaker ID", title = title) +
facet_wrap(~Participant + AdaptType + SpSex, ncol = 16)+
geom_hline(yintercept = 0.5, linetype = 4) + theme_bw()+
scale_colour_manual(values=c("darkred", "darkblue", "darkred", "darkblue")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=14),
axis.text.x = element_text(color = "black", size = 14), # angle = 45, hjust = 1.2, vjust =  1.2
axis.text.y = element_text(color = "black", size = 14),
strip.text.x = element_text(size = 14)) +
scale_y_continuous(limits=c(0,1.0), breaks = c( 0.0, 0.2, 0.4, 0.6, 0.8, 1.0)))
#abspeichern
ggsave(filename, width = 20, height = 20, dpi =300)
#keep environment tidy
remove(yTitleStr, xTitleStr, facetStr, title, filename, p)
